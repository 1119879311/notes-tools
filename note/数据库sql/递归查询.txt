// 找下级
 方法一：SELECT id,pid,name,levels AS 父到子之间级数, paths AS 父到子路径 FROM (
     SELECT *,
     @le:= IF (pid = 0 ,0,  
         IF( LOCATE( CONCAT('|',pid,':'),@pathlevel)   > 0  ,      
                  SUBSTRING_INDEX( SUBSTRING_INDEX(@pathlevel,CONCAT('|',pid,':'),-1),'|',1) +1
        ,@le+1) ) levels
     , @pathlevel:= CONCAT(@pathlevel,'|',id,':', @le ,'|') pathlevel
      , @pathnodes:= IF( pid =0,',0', 
           CONCAT_WS(',',
           IF( LOCATE( CONCAT('|',pid,':'),@pathall) > 0  , 
               SUBSTRING_INDEX( SUBSTRING_INDEX(@pathall,CONCAT('|',pid,':'),-1),'|',1)
              ,@pathnodes ) ,pid  ) )paths
    ,@pathall:=CONCAT(@pathall,'|',id,':', @pathnodes ,'|') pathall 
        FROM  tk_user, 
    (SELECT @le:=0,@pathlevel:='', @pathall:='',@pathnodes:='') vv
    ORDER BY  pid,id
    ) src
 where paths like '%,1%' or id=1 ORDER BY id;

方法二： 
1
SELECT id,name,user_type,pid FROM ( SELECT * FROM tk_user  ORDER BY pid, id DESC ) realname_sorted, (SELECT @pv :=5) initialisation WHERE (FIND_IN_SET(pid,@pv)>0 And @pv := concat(@pv, ',', id)) or id=5
2.

SELECT f1.id,f1.name,f1.user_type,f1.pid,ur.r_id,r.name FROM ( SELECT * FROM tk_user  ORDER BY pid, id DESC ) f1 left join tk_user_role ur on ur.u_id=id left join tk_role r on r.id=ur.r_id, (SELECT @pv :=1) initialisation WHERE (FIND_IN_SET(f1.pid,@pv)>0 And @pv := concat(@pv, ',', f1.id)) or f1.id=1;

3. 
SELECT f1.id,f1.name,f1.user_type,f1.pid,GROUP_CONCAT(ur.r_id) as role_id,GROUP_CONCAT(r.name) as role_name FROM ( SELECT * FROM tk_user  ORDER BY pid, id DESC ) f1 left join tk_user_role ur on ur.u_id=id left join tk_role r on r.id=ur.r_id, (SELECT @pv :=1) initialisation WHERE (FIND_IN_SET(f1.pid,@pv)>0 And @pv := concat(@pv, ',', f1.id)) or f1.id=1 group by f1.id;

4.
SELECT data1.level, data2.* FROM( 
                SELECT  @ids as _ids, 
                (SELECT @ids := GROUP_CONCAT(id)  FROM tk_classify  WHERE FIND_IN_SET(pid, @ids) ) as cids, 
                @l := @l+1 as level  FROM tk_classify, 
                (SELECT @ids :=?, @l := 0 ) b 
                WHERE @ids IS NOT NULL 
            ) data1, tk_classify data2 
            WHERE FIND_IN_SET(data2.id, data1._ids) 
            ORDER BY level, id


找上级 
示例:所在级id 为7

SELECT T2.id, T2.name,T2.pid
FROM (
    SELECT
        @r AS _id,
        (SELECT @r := pid FROM tk_user WHERE id = _id) AS pid,
        @l := @l + 1 AS lvl
    FROM
        (SELECT @r := 7, @l := 0) vars,
        tk_user u
    WHERE @r <> 0) T1
JOIN tk_user T2
ON T1._id = T2.id
ORDER BY T1.lvl DESC;